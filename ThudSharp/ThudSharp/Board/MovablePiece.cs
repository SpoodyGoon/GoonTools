//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Gtk;


namespace ThudSharp
{


	[System.ComponentModel.ToolboxItem(true)]
	public partial class MovablePiece : Gtk.Bin
	{
		private MovablePieceType _PieceType = MovablePieceType.None;
		private bool _IsActive = false;
		public MovablePiece (MovablePieceType PT)
		{
			this.Build ();
			_PieceType = PT;
			this.evtPiece.VisibleWindow = false;
			this.evtPiece.AboveChild = true;
			if(_PieceType== MovablePieceType.Troll)
			{
				imgMovable.Pixbuf = GoonTools.Common.Troll;
			}
			else if(_PieceType== MovablePieceType.Dwarf)
			{
				imgMovable.Pixbuf = GoonTools.Common.Dwarf;
			}
			this.ShowAll();
		}
		
		#region Public Properties
		
		public bool IsActive
		{
			get{return _IsActive;}
			set{_IsActive=value;}
		}
		
		#endregion Public Properties
		
		#region Widget Events
		
		protected virtual void OnEvtPieceButtonPressEvent (object o, Gtk.ButtonPressEventArgs args)
		{
			if(args.Event.Button == 1 && _IsActive == false)
			{
				_IsActive = true;
				BoardPiece bp = (BoardPiece)this.Parent.Parent;
				bp.SetSelected(true, true);
				((MainWindow)this.Toplevel).SelectNotify(_PieceType, bp.Row, bp.Col);
			}
			else if((args.Event.Button == 1 || args.Event.Button == 3) && (_IsActive == true))
			{
				_IsActive = false;
				// cancel select/active
				BoardPiece bp = (BoardPiece)this.Parent.Parent;
				bp.SetSelected(false, false);
			}
			
			//Console.WriteLine("Button Press " + args.Event.Button.ToString() + " Name " + w.Name);
		}

		protected virtual void OnEvtPieceButtonReleaseEvent (object o, Gtk.ButtonReleaseEventArgs args)
		{
		}

		protected virtual void OnEvtPieceExposeEvent (object o, Gtk.ExposeEventArgs args)
		{
		}


		protected virtual void OnEvtPieceEnterNotifyEvent (object o, Gtk.EnterNotifyEventArgs args)
		{
			Console.WriteLine("Enter Notify " + _PieceType.ToString());
		}
		
		#endregion Widget Events
	}
}
