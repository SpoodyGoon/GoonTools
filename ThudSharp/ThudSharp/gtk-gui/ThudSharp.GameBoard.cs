//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThudSharp {
    
    
    public partial class GameBoard {
        
        private Gtk.Fixed fixed1;
        
        private Gtk.Image imgBoardBackGround;
        
        private Gtk.Table GameTable;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ThudSharp.GameBoard
            Stetic.BinContainer.Attach(this);
            this.Name = "ThudSharp.GameBoard";
            // Container child ThudSharp.GameBoard.Gtk.Container+ContainerChild
            this.fixed1 = new Gtk.Fixed();
            this.fixed1.Name = "fixed1";
            this.fixed1.HasWindow = false;
            // Container child fixed1.Gtk.Fixed+FixedChild
            this.imgBoardBackGround = new Gtk.Image();
            this.imgBoardBackGround.WidthRequest = 712;
            this.imgBoardBackGround.HeightRequest = 712;
            this.imgBoardBackGround.Name = "imgBoardBackGround";
            this.imgBoardBackGround.Xpad = 2;
            this.imgBoardBackGround.Ypad = 2;
            this.fixed1.Add(this.imgBoardBackGround);
            // Container child fixed1.Gtk.Fixed+FixedChild
            this.GameTable = new Gtk.Table(((uint)(15)), ((uint)(15)), true);
            this.GameTable.Name = "GameTable";
            this.GameTable.RowSpacing = ((uint)(1));
            this.GameTable.ColumnSpacing = ((uint)(1));
            this.fixed1.Add(this.GameTable);
            Gtk.Fixed.FixedChild w2 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.GameTable]));
            w2.X = 14;
            w2.Y = 14;
            this.Add(this.fixed1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
        }
    }
}
