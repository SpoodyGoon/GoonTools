//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonoBPMonitor {
    
    
    public partial class MainWindow {
        
        private Gtk.UIManager UIManager;
        
        private Gtk.Action FileAction;
        
        private Gtk.Action NewAction;
        
        private Gtk.Action MedicationAction;
        
        private Gtk.Action DoctorsAction;
        
        private Gtk.Action NewEntryAction;
        
        private Gtk.Action UsersAction;
        
        private Gtk.Action HelpAction;
        
        private Gtk.Action AboutAction;
        
        private Gtk.Action editaddPngAction;
        
        private Gtk.Action edituserPngAction;
        
        private Gtk.Action exitPngAction;
        
        private Gtk.Action aboutAction;
        
        private Gtk.Action QuitAction;
        
        private Gtk.Action preferencesAction;
        
        private Gtk.VBox vbox1;
        
        private Gtk.MenuBar menubar1;
        
        private Gtk.Toolbar toolbar1;
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment GtkAlignment;
        
        private Gtk.Label GtkLabel3;
        
        private Gtk.Statusbar statusbar1;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoBPMonitor.MainWindow
            this.UIManager = new Gtk.UIManager();
            Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
            this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("File"), null, null);
            this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("File");
            w1.Add(this.FileAction, null);
            this.NewAction = new Gtk.Action("NewAction", Mono.Unix.Catalog.GetString("New"), null, null);
            this.NewAction.ShortLabel = Mono.Unix.Catalog.GetString("New");
            w1.Add(this.NewAction, null);
            this.MedicationAction = new Gtk.Action("MedicationAction", Mono.Unix.Catalog.GetString("Medication..."), null, null);
            this.MedicationAction.ShortLabel = Mono.Unix.Catalog.GetString("Medication...");
            w1.Add(this.MedicationAction, null);
            this.DoctorsAction = new Gtk.Action("DoctorsAction", Mono.Unix.Catalog.GetString("Doctors..."), null, null);
            this.DoctorsAction.ShortLabel = Mono.Unix.Catalog.GetString("Doctors...");
            w1.Add(this.DoctorsAction, null);
            this.NewEntryAction = new Gtk.Action("NewEntryAction", Mono.Unix.Catalog.GetString("New Entry..."), null, "edit_add.png");
            this.NewEntryAction.ShortLabel = Mono.Unix.Catalog.GetString("New Entry...");
            w1.Add(this.NewEntryAction, null);
            this.UsersAction = new Gtk.Action("UsersAction", Mono.Unix.Catalog.GetString("Users..."), null, "edit_user.png");
            this.UsersAction.ShortLabel = Mono.Unix.Catalog.GetString("Users...");
            w1.Add(this.UsersAction, null);
            this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("Help"), null, null);
            this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Help");
            w1.Add(this.HelpAction, null);
            this.AboutAction = new Gtk.Action("AboutAction", Mono.Unix.Catalog.GetString("About"), null, null);
            this.AboutAction.ShortLabel = Mono.Unix.Catalog.GetString("About");
            w1.Add(this.AboutAction, null);
            this.editaddPngAction = new Gtk.Action("editaddPngAction", null, null, "edit_add.png");
            w1.Add(this.editaddPngAction, null);
            this.edituserPngAction = new Gtk.Action("edituserPngAction", null, null, "edit_user.png");
            w1.Add(this.edituserPngAction, null);
            this.exitPngAction = new Gtk.Action("exitPngAction", null, null, "exit.png");
            w1.Add(this.exitPngAction, null);
            this.aboutAction = new Gtk.Action("aboutAction", null, null, "gtk-about");
            w1.Add(this.aboutAction, null);
            this.QuitAction = new Gtk.Action("QuitAction", Mono.Unix.Catalog.GetString("Quit"), null, "exit.png");
            this.QuitAction.ShortLabel = Mono.Unix.Catalog.GetString("Quit");
            w1.Add(this.QuitAction, null);
            this.preferencesAction = new Gtk.Action("preferencesAction", null, null, "gtk-preferences");
            w1.Add(this.preferencesAction, null);
            this.UIManager.InsertActionGroup(w1, 0);
            this.AddAccelGroup(this.UIManager.AccelGroup);
            this.WidthRequest = 550;
            this.HeightRequest = 450;
            this.Name = "MonoBPMonitor.MainWindow";
            this.Title = Mono.Unix.Catalog.GetString("Blood Presure Monitor");
            this.Icon = Gdk.Pixbuf.LoadFromResource("icon_small.png");
            this.WindowPosition = ((Gtk.WindowPosition)(1));
            this.BorderWidth = ((uint)(3));
            this.AllowShrink = true;
            this.DefaultWidth = 550;
            this.DefaultHeight = 400;
            // Container child MonoBPMonitor.MainWindow.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString(@"<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menu name='NewAction' action='NewAction'><menuitem name='NewEntryAction' action='NewEntryAction'/></menu><menuitem name='MedicationAction' action='MedicationAction'/><menuitem name='DoctorsAction' action='DoctorsAction'/><menuitem name='UsersAction' action='UsersAction'/><menuitem name='QuitAction' action='QuitAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='AboutAction' action='AboutAction'/></menu></menubar></ui>");
            this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
            this.menubar1.Name = "menubar1";
            this.vbox1.Add(this.menubar1);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString(@"<ui><toolbar name='toolbar1'><toolitem name='editaddPngAction' action='editaddPngAction'/><toolitem name='edituserPngAction' action='edituserPngAction'/><separator/><toolitem name='preferencesAction' action='preferencesAction'/><toolitem name='aboutAction' action='aboutAction'/><toolitem name='exitPngAction' action='exitPngAction'/></toolbar></ui>");
            this.toolbar1 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar1")));
            this.toolbar1.Name = "toolbar1";
            this.toolbar1.ShowArrow = false;
            this.toolbar1.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
            this.vbox1.Add(this.toolbar1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.toolbar1]));
            w3.Position = 1;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame1.Gtk.Container+ContainerChild
            this.GtkAlignment = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment.Name = "GtkAlignment";
            this.GtkAlignment.LeftPadding = ((uint)(12));
            this.frame1.Add(this.GtkAlignment);
            this.GtkLabel3 = new Gtk.Label();
            this.GtkLabel3.Name = "GtkLabel3";
            this.GtkLabel3.LabelProp = Mono.Unix.Catalog.GetString("<b>frame1</b>");
            this.GtkLabel3.UseMarkup = true;
            this.frame1.LabelWidget = this.GtkLabel3;
            this.vbox1.Add(this.frame1);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox1[this.frame1]));
            w5.Position = 2;
            // Container child vbox1.Gtk.Box+BoxChild
            this.statusbar1 = new Gtk.Statusbar();
            this.statusbar1.Name = "statusbar1";
            this.statusbar1.Spacing = 6;
            this.vbox1.Add(this.statusbar1);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.vbox1[this.statusbar1]));
            w6.Position = 4;
            w6.Expand = false;
            w6.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
            this.MedicationAction.Activated += new System.EventHandler(this.OnMedicationActionActivated);
            this.DoctorsAction.Activated += new System.EventHandler(this.OnDoctorsActionActivated);
            this.NewEntryAction.Activated += new System.EventHandler(this.OnNewEntryActionActivated);
            this.UsersAction.Activated += new System.EventHandler(this.OnUsersActionActivated);
            this.AboutAction.Activated += new System.EventHandler(this.OnAboutActionActivated);
            this.editaddPngAction.Activated += new System.EventHandler(this.OnEditaddPngActionActivated);
            this.edituserPngAction.Activated += new System.EventHandler(this.OnEdituserPngActionActivated);
            this.exitPngAction.Activated += new System.EventHandler(this.OnExitPngActionActivated);
            this.aboutAction.Activated += new System.EventHandler(this.OnAboutActionActivated);
            this.QuitAction.Activated += new System.EventHandler(this.OnQuitActionActivated);
            this.preferencesAction.Activated += new System.EventHandler(this.OnPreferencesActionActivated);
        }
    }
}
