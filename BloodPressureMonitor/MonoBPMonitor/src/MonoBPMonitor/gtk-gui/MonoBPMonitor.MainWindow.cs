// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoBPMonitor {
    
    
    public partial class MainWindow {
        
        private Gtk.UIManager UIManager;
        
        private Gtk.Action FileAction;
        
        private Gtk.Action NewAction;
        
        private Gtk.Action MedicationAction;
        
        private Gtk.Action DoctorsAction;
        
        private Gtk.Action NewEntryAction;
        
        private Gtk.Action UsersAction;
        
        private Gtk.Action HelpAction;
        
        private Gtk.Action aboutAction;
        
        private Gtk.Action NewEntryAction1;
        
        private Gtk.Action UsersAction1;
        
        private Gtk.Action QuitAction1;
        
        private Gtk.Action AboutAction1;
        
        private Gtk.Action QuitAction;
        
        private Gtk.Action PreferencesAction;
        
        private Gtk.Action DoctorsAction1;
        
        private Gtk.Action MedicationAction1;
        
        private Gtk.Action ErrorLogAction;
        
        private Gtk.Action ToolsAction;
        
        private Gtk.Action UpdatesAction;
        
        private Gtk.Action OptionsAction;
        
        private Gtk.Action OnlineHelpAction;
        
        private Gtk.Action ProjectWebSiteAction;
        
        private Gtk.Action OnlineDocumentationAction;
        
        private Gtk.Action IssuesFeatureRequestsAction;
        
        private Gtk.VBox vbox1;
        
        private Gtk.MenuBar menubar1;
        
        private Gtk.Toolbar toolbar1;
        
        private Gtk.Alignment alignment1;
        
        private Gtk.HSeparator hseparator1;
        
        private Gtk.Alignment alignment2;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Alignment alignment4;
        
        private Gtk.HButtonBox hbuttonbox1;
        
        private Gtk.Button btnAddEntry;
        
        private Gtk.Button btnRemoveEntry;
        
        private Gtk.Button btnEditEntry;
        
        private Gtk.Alignment alignment5;
        
        private MonoBPMonitor.Users.UserComboBox cboUser;
        
        private Gtk.Alignment alignment3;
        
        private Gtk.ScrolledWindow swEntityRpt;
        
        private Gtk.Statusbar statusbar1;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoBPMonitor.MainWindow
            this.UIManager = new Gtk.UIManager();
            Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
            this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("File"), null, null);
            this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("File");
            w1.Add(this.FileAction, null);
            this.NewAction = new Gtk.Action("NewAction", Mono.Unix.Catalog.GetString("New"), null, null);
            this.NewAction.ShortLabel = Mono.Unix.Catalog.GetString("New");
            w1.Add(this.NewAction, null);
            this.MedicationAction = new Gtk.Action("MedicationAction", Mono.Unix.Catalog.GetString("Medication..."), null, "rx.png");
            this.MedicationAction.ShortLabel = Mono.Unix.Catalog.GetString("Medication...");
            w1.Add(this.MedicationAction, null);
            this.DoctorsAction = new Gtk.Action("DoctorsAction", Mono.Unix.Catalog.GetString("_Doctors..."), null, "doctor.png");
            this.DoctorsAction.ShortLabel = Mono.Unix.Catalog.GetString("Doctors...");
            w1.Add(this.DoctorsAction, null);
            this.NewEntryAction = new Gtk.Action("NewEntryAction", Mono.Unix.Catalog.GetString("New Entry..."), null, "edit_add.png");
            this.NewEntryAction.ShortLabel = Mono.Unix.Catalog.GetString("New Entry...");
            w1.Add(this.NewEntryAction, "<Control><Mod2>n");
            this.UsersAction = new Gtk.Action("UsersAction", Mono.Unix.Catalog.GetString("Users..."), null, "edit_user.png");
            this.UsersAction.ShortLabel = Mono.Unix.Catalog.GetString("Users...");
            w1.Add(this.UsersAction, null);
            this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("Help"), null, null);
            this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Help");
            w1.Add(this.HelpAction, null);
            this.aboutAction = new Gtk.Action("aboutAction", Mono.Unix.Catalog.GetString("_About..."), null, "gtk-about");
            this.aboutAction.ShortLabel = Mono.Unix.Catalog.GetString("About");
            w1.Add(this.aboutAction, null);
            this.NewEntryAction1 = new Gtk.Action("NewEntryAction1", Mono.Unix.Catalog.GetString("New _Entry..."), null, "edit_add.png");
            this.NewEntryAction1.ShortLabel = Mono.Unix.Catalog.GetString("New _Entry...");
            w1.Add(this.NewEntryAction1, "<Control><Mod2>n");
            this.UsersAction1 = new Gtk.Action("UsersAction1", Mono.Unix.Catalog.GetString("_Users..."), null, "edit_user.png");
            this.UsersAction1.ShortLabel = Mono.Unix.Catalog.GetString("_Users...");
            w1.Add(this.UsersAction1, null);
            this.QuitAction1 = new Gtk.Action("QuitAction1", Mono.Unix.Catalog.GetString("_Quit"), null, "exit.png");
            this.QuitAction1.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
            w1.Add(this.QuitAction1, null);
            this.AboutAction1 = new Gtk.Action("AboutAction1", Mono.Unix.Catalog.GetString("_About..."), null, "gtk-about");
            this.AboutAction1.ShortLabel = Mono.Unix.Catalog.GetString("_About...");
            w1.Add(this.AboutAction1, null);
            this.QuitAction = new Gtk.Action("QuitAction", Mono.Unix.Catalog.GetString("Quit"), null, "exit.png");
            this.QuitAction.ShortLabel = Mono.Unix.Catalog.GetString("Quit");
            w1.Add(this.QuitAction, null);
            this.PreferencesAction = new Gtk.Action("PreferencesAction", Mono.Unix.Catalog.GetString("_Preferences..."), null, "Options.png");
            this.PreferencesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Preferences...");
            w1.Add(this.PreferencesAction, null);
            this.DoctorsAction1 = new Gtk.Action("DoctorsAction1", Mono.Unix.Catalog.GetString("_Doctors.."), null, "doctor.png");
            this.DoctorsAction1.ShortLabel = Mono.Unix.Catalog.GetString("_Doctors..");
            w1.Add(this.DoctorsAction1, null);
            this.MedicationAction1 = new Gtk.Action("MedicationAction1", Mono.Unix.Catalog.GetString("_Medication"), null, "rx.png");
            this.MedicationAction1.ShortLabel = Mono.Unix.Catalog.GetString("_Medication");
            w1.Add(this.MedicationAction1, null);
            this.ErrorLogAction = new Gtk.Action("ErrorLogAction", Mono.Unix.Catalog.GetString("Error Log"), null, "ErrorLog.png");
            this.ErrorLogAction.ShortLabel = Mono.Unix.Catalog.GetString("Error Log");
            w1.Add(this.ErrorLogAction, null);
            this.ToolsAction = new Gtk.Action("ToolsAction", Mono.Unix.Catalog.GetString("Tools"), null, null);
            this.ToolsAction.ShortLabel = Mono.Unix.Catalog.GetString("Tools");
            w1.Add(this.ToolsAction, null);
            this.UpdatesAction = new Gtk.Action("UpdatesAction", Mono.Unix.Catalog.GetString("Updates..."), null, "update_small.png");
            this.UpdatesAction.ShortLabel = Mono.Unix.Catalog.GetString("Updates");
            w1.Add(this.UpdatesAction, null);
            this.OptionsAction = new Gtk.Action("OptionsAction", Mono.Unix.Catalog.GetString("Options..."), null, "Options.png");
            this.OptionsAction.ShortLabel = Mono.Unix.Catalog.GetString("Options...");
            w1.Add(this.OptionsAction, null);
            this.OnlineHelpAction = new Gtk.Action("OnlineHelpAction", Mono.Unix.Catalog.GetString("Online Help"), null, "ManageConnectinos.png");
            this.OnlineHelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Online Help");
            w1.Add(this.OnlineHelpAction, null);
            this.ProjectWebSiteAction = new Gtk.Action("ProjectWebSiteAction", Mono.Unix.Catalog.GetString("Project Web Site"), null, "ProjectWebSite.png");
            this.ProjectWebSiteAction.ShortLabel = Mono.Unix.Catalog.GetString("Project Web Site");
            w1.Add(this.ProjectWebSiteAction, null);
            this.OnlineDocumentationAction = new Gtk.Action("OnlineDocumentationAction", Mono.Unix.Catalog.GetString("Online Documentation"), null, "DocumentOnline.png");
            this.OnlineDocumentationAction.ShortLabel = Mono.Unix.Catalog.GetString("Online Documentation");
            w1.Add(this.OnlineDocumentationAction, null);
            this.IssuesFeatureRequestsAction = new Gtk.Action("IssuesFeatureRequestsAction", Mono.Unix.Catalog.GetString("Issues & Feature Requests"), null, "issue_feature.png");
            this.IssuesFeatureRequestsAction.ShortLabel = Mono.Unix.Catalog.GetString("Issues & Feature Requests");
            w1.Add(this.IssuesFeatureRequestsAction, null);
            this.UIManager.InsertActionGroup(w1, 0);
            this.AddAccelGroup(this.UIManager.AccelGroup);
            this.WidthRequest = 750;
            this.HeightRequest = 575;
            this.Name = "MonoBPMonitor.MainWindow";
            this.Title = Mono.Unix.Catalog.GetString("Blood Presure Monitor");
            this.Icon = Gdk.Pixbuf.LoadFromResource("icon_small.png");
            this.WindowPosition = ((Gtk.WindowPosition)(1));
            this.BorderWidth = ((uint)(3));
            this.AllowShrink = true;
            this.DefaultWidth = 750;
            this.DefaultHeight = 575;
            // Container child MonoBPMonitor.MainWindow.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='NewEntryAction' action='NewEntryAction'/><menuitem name='MedicationAction' action='MedicationAction'/><menuitem name='DoctorsAction' action='DoctorsAction'/><menuitem name='UsersAction' action='UsersAction'/><separator/><menuitem name='QuitAction' action='QuitAction'/></menu><menu name='ToolsAction' action='ToolsAction'><menuitem name='UpdatesAction' action='UpdatesAction'/><menuitem name='OptionsAction' action='OptionsAction'/></menu><menu name='HelpAction' action='HelpAction'><menu name='OnlineHelpAction' action='OnlineHelpAction'><menuitem name='ProjectWebSiteAction' action='ProjectWebSiteAction'/><menuitem name='OnlineDocumentationAction' action='OnlineDocumentationAction'/><menuitem name='IssuesFeatureRequestsAction' action='IssuesFeatureRequestsAction'/></menu><menuitem name='ErrorLogAction' action='ErrorLogAction'/><menuitem name='aboutAction' action='aboutAction'/></menu></menubar></ui>");
            this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
            this.menubar1.Name = "menubar1";
            this.vbox1.Add(this.menubar1);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString("<ui><toolbar name='toolbar1'><toolitem name='NewEntryAction1' action='NewEntryAction1'/><toolitem name='UsersAction1' action='UsersAction1'/><toolitem name='MedicationAction1' action='MedicationAction1'/><toolitem name='DoctorsAction1' action='DoctorsAction1'/><separator/><toolitem name='PreferencesAction' action='PreferencesAction'/><toolitem name='AboutAction1' action='AboutAction1'/><separator/><toolitem name='QuitAction1' action='QuitAction1'/></toolbar></ui>");
            this.toolbar1 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar1")));
            this.toolbar1.Name = "toolbar1";
            this.toolbar1.ShowArrow = false;
            this.toolbar1.ToolbarStyle = ((Gtk.ToolbarStyle)(2));
            this.toolbar1.IconSize = ((Gtk.IconSize)(2));
            this.vbox1.Add(this.toolbar1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.toolbar1]));
            w3.Position = 1;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.alignment1 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment1.Name = "alignment1";
            this.alignment1.TopPadding = ((uint)(2));
            this.alignment1.BottomPadding = ((uint)(2));
            // Container child alignment1.Gtk.Container+ContainerChild
            this.hseparator1 = new Gtk.HSeparator();
            this.hseparator1.Name = "hseparator1";
            this.alignment1.Add(this.hseparator1);
            this.vbox1.Add(this.alignment1);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox1[this.alignment1]));
            w5.Position = 2;
            w5.Expand = false;
            w5.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.alignment2 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment2.Name = "alignment2";
            this.alignment2.LeftPadding = ((uint)(20));
            // Container child alignment2.Gtk.Container+ContainerChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Homogeneous = true;
            this.hbox1.Spacing = 57;
            // Container child hbox1.Gtk.Box+BoxChild
            this.alignment4 = new Gtk.Alignment(0.05F, 0.5F, 0.01F, 1F);
            this.alignment4.Name = "alignment4";
            // Container child alignment4.Gtk.Container+ContainerChild
            this.hbuttonbox1 = new Gtk.HButtonBox();
            this.hbuttonbox1.Name = "hbuttonbox1";
            this.hbuttonbox1.Spacing = 24;
            // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            this.btnAddEntry = new Gtk.Button();
            this.btnAddEntry.CanFocus = true;
            this.btnAddEntry.Name = "btnAddEntry";
            this.btnAddEntry.UseUnderline = true;
            // Container child btnAddEntry.Gtk.Container+ContainerChild
            Gtk.Alignment w6 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w7 = new Gtk.HBox();
            w7.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w8 = new Gtk.Image();
            w8.Pixbuf = Gdk.Pixbuf.LoadFromResource("edit_add.png");
            w7.Add(w8);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w10 = new Gtk.Label();
            w10.LabelProp = Mono.Unix.Catalog.GetString("_Add");
            w10.UseUnderline = true;
            w7.Add(w10);
            w6.Add(w7);
            this.btnAddEntry.Add(w6);
            this.hbuttonbox1.Add(this.btnAddEntry);
            Gtk.ButtonBox.ButtonBoxChild w14 = ((Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox1[this.btnAddEntry]));
            w14.Expand = false;
            w14.Fill = false;
            // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            this.btnRemoveEntry = new Gtk.Button();
            this.btnRemoveEntry.Sensitive = false;
            this.btnRemoveEntry.CanFocus = true;
            this.btnRemoveEntry.Name = "btnRemoveEntry";
            this.btnRemoveEntry.UseUnderline = true;
            // Container child btnRemoveEntry.Gtk.Container+ContainerChild
            Gtk.Alignment w15 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w16 = new Gtk.HBox();
            w16.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w17 = new Gtk.Image();
            w17.Pixbuf = Gdk.Pixbuf.LoadFromResource("edit_remove.png");
            w16.Add(w17);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w19 = new Gtk.Label();
            w19.LabelProp = Mono.Unix.Catalog.GetString("_Remove");
            w19.UseUnderline = true;
            w16.Add(w19);
            w15.Add(w16);
            this.btnRemoveEntry.Add(w15);
            this.hbuttonbox1.Add(this.btnRemoveEntry);
            Gtk.ButtonBox.ButtonBoxChild w23 = ((Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox1[this.btnRemoveEntry]));
            w23.Position = 1;
            w23.Expand = false;
            w23.Fill = false;
            // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            this.btnEditEntry = new Gtk.Button();
            this.btnEditEntry.Sensitive = false;
            this.btnEditEntry.CanFocus = true;
            this.btnEditEntry.Name = "btnEditEntry";
            this.btnEditEntry.UseUnderline = true;
            // Container child btnEditEntry.Gtk.Container+ContainerChild
            Gtk.Alignment w24 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w25 = new Gtk.HBox();
            w25.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w26 = new Gtk.Image();
            w26.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-edit", Gtk.IconSize.Menu, 16);
            w25.Add(w26);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w28 = new Gtk.Label();
            w28.LabelProp = Mono.Unix.Catalog.GetString("_Edit");
            w28.UseUnderline = true;
            w25.Add(w28);
            w24.Add(w25);
            this.btnEditEntry.Add(w24);
            this.hbuttonbox1.Add(this.btnEditEntry);
            Gtk.ButtonBox.ButtonBoxChild w32 = ((Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox1[this.btnEditEntry]));
            w32.Position = 2;
            w32.Expand = false;
            w32.Fill = false;
            this.alignment4.Add(this.hbuttonbox1);
            this.hbox1.Add(this.alignment4);
            Gtk.Box.BoxChild w34 = ((Gtk.Box.BoxChild)(this.hbox1[this.alignment4]));
            w34.Position = 0;
            // Container child hbox1.Gtk.Box+BoxChild
            this.alignment5 = new Gtk.Alignment(0.98F, 0.5F, 0.01F, 1F);
            this.alignment5.Name = "alignment5";
            // Container child alignment5.Gtk.Container+ContainerChild
            this.cboUser = null;
            this.alignment5.Add(this.cboUser);
            this.hbox1.Add(this.alignment5);
            Gtk.Box.BoxChild w36 = ((Gtk.Box.BoxChild)(this.hbox1[this.alignment5]));
            w36.Position = 1;
            w36.Expand = false;
            w36.Fill = false;
            this.alignment2.Add(this.hbox1);
            this.vbox1.Add(this.alignment2);
            Gtk.Box.BoxChild w38 = ((Gtk.Box.BoxChild)(this.vbox1[this.alignment2]));
            w38.Position = 3;
            w38.Expand = false;
            w38.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.alignment3 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment3.Name = "alignment3";
            // Container child alignment3.Gtk.Container+ContainerChild
            this.swEntityRpt = new Gtk.ScrolledWindow();
            this.swEntityRpt.CanFocus = true;
            this.swEntityRpt.Name = "swEntityRpt";
            this.swEntityRpt.ShadowType = ((Gtk.ShadowType)(1));
            this.alignment3.Add(this.swEntityRpt);
            this.vbox1.Add(this.alignment3);
            Gtk.Box.BoxChild w40 = ((Gtk.Box.BoxChild)(this.vbox1[this.alignment3]));
            w40.Position = 4;
            // Container child vbox1.Gtk.Box+BoxChild
            this.statusbar1 = new Gtk.Statusbar();
            this.statusbar1.Name = "statusbar1";
            this.statusbar1.Spacing = 6;
            this.vbox1.Add(this.statusbar1);
            Gtk.Box.BoxChild w41 = ((Gtk.Box.BoxChild)(this.vbox1[this.statusbar1]));
            w41.Position = 5;
            w41.Expand = false;
            w41.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
            this.MedicationAction.Activated += new System.EventHandler(this.OnMedicationActionActivated);
            this.DoctorsAction.Activated += new System.EventHandler(this.OnDoctorsActionActivated);
            this.NewEntryAction.Activated += new System.EventHandler(this.OnNewEntryActionActivated);
            this.UsersAction.Activated += new System.EventHandler(this.OnUsersActionActivated);
            this.aboutAction.Activated += new System.EventHandler(this.OnAboutActionActivated);
            this.NewEntryAction1.Activated += new System.EventHandler(this.OnEditaddPngActionActivated);
            this.UsersAction1.Activated += new System.EventHandler(this.OnEdituserPngActionActivated);
            this.QuitAction1.Activated += new System.EventHandler(this.OnExitPngActionActivated);
            this.AboutAction1.Activated += new System.EventHandler(this.OnAboutActionActivated);
            this.QuitAction.Activated += new System.EventHandler(this.OnQuitActionActivated);
            this.PreferencesAction.Activated += new System.EventHandler(this.OnPreferencesActionActivated);
            this.DoctorsAction1.Activated += new System.EventHandler(this.OnDoctorPngActionActivated);
            this.MedicationAction1.Activated += new System.EventHandler(this.OnRxPngActionActivated);
            this.ErrorLogAction.Activated += new System.EventHandler(this.OnErrorLogActionActivated);
            this.UpdatesAction.Activated += new System.EventHandler(this.OnUpdatesActionActivated);
            this.OptionsAction.Activated += new System.EventHandler(this.OnPreferencesActionActivated);
            this.ProjectWebSiteAction.Activated += new System.EventHandler(this.OnProjectWebSiteActionActivated);
            this.OnlineDocumentationAction.Activated += new System.EventHandler(this.OnOnlineDocumentationActionActivated);
            this.IssuesFeatureRequestsAction.Activated += new System.EventHandler(this.OnIssuesFeatureRequestsActionActivated);
            this.btnAddEntry.Clicked += new System.EventHandler(this.OnBtnAddEntryClicked);
            this.btnRemoveEntry.Clicked += new System.EventHandler(this.OnBtnRemoveEntryClicked);
            this.btnEditEntry.Clicked += new System.EventHandler(this.OnBtnEditEntryClicked);
        }
    }
}
