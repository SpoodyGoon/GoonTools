//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonoBPMonitor {
    
    
    public partial class frmBackupRestore {
        
        private Gtk.Alignment alignment1;
        
        private Gtk.VBox vbox2;
        
        private Gtk.Alignment alignment2;
        
        private Gtk.Label label1;
        
        private Gtk.Alignment alignment9;
        
        private Gtk.HSeparator hseparator3;
        
        private Gtk.Alignment alignment3;
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment alignment5;
        
        private Gtk.Table table1;
        
        private Gtk.Alignment alignment11;
        
        private Gtk.CheckButton cbxAll;
        
        private Gtk.Alignment alignment12;
        
        private Gtk.HSeparator hseparator4;
        
        private Gtk.Alignment alignment13;
        
        private Gtk.CheckButton cbxDatabaseData;
        
        private Gtk.Alignment alignment14;
        
        private Gtk.CheckButton cbxDatabaseSchema;
        
        private Gtk.Alignment alignment15;
        
        private Gtk.CheckButton cbxLogs;
        
        private Gtk.Alignment alignment16;
        
        private Gtk.CheckButton cbxOptions;
        
        private Gtk.Label GtkLabel6;
        
        private Gtk.Alignment alignment4;
        
        private Gtk.HButtonBox hbuttonbox2;
        
        private Gtk.Button btnBackup;
        
        private Gtk.Button btnRestore;
        
        private Gtk.Button btnClose;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoBPMonitor.frmBackupRestore
            this.Name = "MonoBPMonitor.frmBackupRestore";
            this.Title = Mono.Unix.Catalog.GetString("Backup/Restore");
            this.TypeHint = ((Gdk.WindowTypeHint)(1));
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.Modal = true;
            this.BorderWidth = ((uint)(3));
            this.Resizable = false;
            this.AllowGrow = false;
            this.DestroyWithParent = true;
            // Internal child MonoBPMonitor.frmBackupRestore.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.alignment1 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment1.Name = "alignment1";
            // Container child alignment1.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            // Container child vbox2.Gtk.Box+BoxChild
            this.alignment2 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment2.Name = "alignment2";
            // Container child alignment2.Gtk.Container+ContainerChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("<big><b>Backup/Restore</b></big>");
            this.label1.UseMarkup = true;
            this.alignment2.Add(this.label1);
            this.vbox2.Add(this.alignment2);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox2[this.alignment2]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.alignment9 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment9.Name = "alignment9";
            // Container child alignment9.Gtk.Container+ContainerChild
            this.hseparator3 = new Gtk.HSeparator();
            this.hseparator3.Name = "hseparator3";
            this.alignment9.Add(this.hseparator3);
            this.vbox2.Add(this.alignment9);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox2[this.alignment9]));
            w5.Position = 1;
            w5.Expand = false;
            w5.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.alignment3 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment3.Name = "alignment3";
            // Container child alignment3.Gtk.Container+ContainerChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.BorderWidth = ((uint)(4));
            // Container child frame1.Gtk.Container+ContainerChild
            this.alignment5 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment5.Name = "alignment5";
            this.alignment5.BorderWidth = ((uint)(5));
            // Container child alignment5.Gtk.Container+ContainerChild
            this.table1 = new Gtk.Table(((uint)(3)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.alignment11 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment11.Name = "alignment11";
            // Container child alignment11.Gtk.Container+ContainerChild
            this.cbxAll = new Gtk.CheckButton();
            this.cbxAll.CanFocus = true;
            this.cbxAll.Name = "cbxAll";
            this.cbxAll.Label = Mono.Unix.Catalog.GetString("Select All");
            this.cbxAll.Active = true;
            this.cbxAll.DrawIndicator = true;
            this.cbxAll.UseUnderline = true;
            this.alignment11.Add(this.cbxAll);
            this.table1.Add(this.alignment11);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.alignment11]));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.alignment12 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment12.Name = "alignment12";
            // Container child alignment12.Gtk.Container+ContainerChild
            this.hseparator4 = new Gtk.HSeparator();
            this.hseparator4.Sensitive = false;
            this.hseparator4.Name = "hseparator4";
            this.alignment12.Add(this.hseparator4);
            this.table1.Add(this.alignment12);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table1[this.alignment12]));
            w9.LeftAttach = ((uint)(1));
            w9.RightAttach = ((uint)(2));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.alignment13 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment13.Name = "alignment13";
            // Container child alignment13.Gtk.Container+ContainerChild
            this.cbxDatabaseData = new Gtk.CheckButton();
            this.cbxDatabaseData.CanFocus = true;
            this.cbxDatabaseData.Name = "cbxDatabaseData";
            this.cbxDatabaseData.Label = Mono.Unix.Catalog.GetString("Database Data");
            this.cbxDatabaseData.Active = true;
            this.cbxDatabaseData.DrawIndicator = true;
            this.cbxDatabaseData.UseUnderline = true;
            this.alignment13.Add(this.cbxDatabaseData);
            this.table1.Add(this.alignment13);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.table1[this.alignment13]));
            w11.TopAttach = ((uint)(1));
            w11.BottomAttach = ((uint)(2));
            w11.LeftAttach = ((uint)(1));
            w11.RightAttach = ((uint)(2));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.alignment14 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment14.Name = "alignment14";
            // Container child alignment14.Gtk.Container+ContainerChild
            this.cbxDatabaseSchema = new Gtk.CheckButton();
            this.cbxDatabaseSchema.CanFocus = true;
            this.cbxDatabaseSchema.Name = "cbxDatabaseSchema";
            this.cbxDatabaseSchema.Label = Mono.Unix.Catalog.GetString("Database Schema");
            this.cbxDatabaseSchema.Active = true;
            this.cbxDatabaseSchema.DrawIndicator = true;
            this.cbxDatabaseSchema.UseUnderline = true;
            this.alignment14.Add(this.cbxDatabaseSchema);
            this.table1.Add(this.alignment14);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.table1[this.alignment14]));
            w13.TopAttach = ((uint)(1));
            w13.BottomAttach = ((uint)(2));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.alignment15 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment15.Name = "alignment15";
            // Container child alignment15.Gtk.Container+ContainerChild
            this.cbxLogs = new Gtk.CheckButton();
            this.cbxLogs.CanFocus = true;
            this.cbxLogs.Name = "cbxLogs";
            this.cbxLogs.Label = Mono.Unix.Catalog.GetString("Program Logs");
            this.cbxLogs.Active = true;
            this.cbxLogs.DrawIndicator = true;
            this.cbxLogs.UseUnderline = true;
            this.alignment15.Add(this.cbxLogs);
            this.table1.Add(this.alignment15);
            Gtk.Table.TableChild w15 = ((Gtk.Table.TableChild)(this.table1[this.alignment15]));
            w15.TopAttach = ((uint)(2));
            w15.BottomAttach = ((uint)(3));
            w15.LeftAttach = ((uint)(1));
            w15.RightAttach = ((uint)(2));
            w15.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.alignment16 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment16.Name = "alignment16";
            // Container child alignment16.Gtk.Container+ContainerChild
            this.cbxOptions = new Gtk.CheckButton();
            this.cbxOptions.CanFocus = true;
            this.cbxOptions.Name = "cbxOptions";
            this.cbxOptions.Label = Mono.Unix.Catalog.GetString("Program Options");
            this.cbxOptions.Active = true;
            this.cbxOptions.DrawIndicator = true;
            this.cbxOptions.UseUnderline = true;
            this.alignment16.Add(this.cbxOptions);
            this.table1.Add(this.alignment16);
            Gtk.Table.TableChild w17 = ((Gtk.Table.TableChild)(this.table1[this.alignment16]));
            w17.TopAttach = ((uint)(2));
            w17.BottomAttach = ((uint)(3));
            w17.YOptions = ((Gtk.AttachOptions)(4));
            this.alignment5.Add(this.table1);
            this.frame1.Add(this.alignment5);
            this.GtkLabel6 = new Gtk.Label();
            this.GtkLabel6.Name = "GtkLabel6";
            this.GtkLabel6.Xpad = 8;
            this.GtkLabel6.LabelProp = Mono.Unix.Catalog.GetString("<b>Options</b>");
            this.GtkLabel6.UseMarkup = true;
            this.GtkLabel6.SingleLineMode = true;
            this.frame1.LabelWidget = this.GtkLabel6;
            this.alignment3.Add(this.frame1);
            this.vbox2.Add(this.alignment3);
            Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(this.vbox2[this.alignment3]));
            w21.Position = 2;
            w21.Expand = false;
            w21.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.alignment4 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment4.Name = "alignment4";
            this.alignment4.LeftPadding = ((uint)(18));
            this.alignment4.TopPadding = ((uint)(4));
            this.alignment4.BottomPadding = ((uint)(9));
            // Container child alignment4.Gtk.Container+ContainerChild
            this.hbuttonbox2 = new Gtk.HButtonBox();
            this.hbuttonbox2.Name = "hbuttonbox2";
            this.hbuttonbox2.Spacing = 10;
            this.hbuttonbox2.LayoutStyle = ((Gtk.ButtonBoxStyle)(3));
            // Container child hbuttonbox2.Gtk.ButtonBox+ButtonBoxChild
            this.btnBackup = new Gtk.Button();
            this.btnBackup.CanFocus = true;
            this.btnBackup.Name = "btnBackup";
            this.btnBackup.UseUnderline = true;
            this.btnBackup.Label = Mono.Unix.Catalog.GetString("Backup");
            this.hbuttonbox2.Add(this.btnBackup);
            Gtk.ButtonBox.ButtonBoxChild w22 = ((Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox2[this.btnBackup]));
            w22.Expand = false;
            w22.Fill = false;
            // Container child hbuttonbox2.Gtk.ButtonBox+ButtonBoxChild
            this.btnRestore = new Gtk.Button();
            this.btnRestore.CanFocus = true;
            this.btnRestore.Name = "btnRestore";
            this.btnRestore.UseUnderline = true;
            this.btnRestore.Label = Mono.Unix.Catalog.GetString("Restore");
            this.hbuttonbox2.Add(this.btnRestore);
            Gtk.ButtonBox.ButtonBoxChild w23 = ((Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox2[this.btnRestore]));
            w23.Position = 1;
            w23.Expand = false;
            w23.Fill = false;
            this.alignment4.Add(this.hbuttonbox2);
            this.vbox2.Add(this.alignment4);
            Gtk.Box.BoxChild w25 = ((Gtk.Box.BoxChild)(this.vbox2[this.alignment4]));
            w25.Position = 3;
            w25.Expand = false;
            w25.Fill = false;
            this.alignment1.Add(this.vbox2);
            w1.Add(this.alignment1);
            Gtk.Box.BoxChild w27 = ((Gtk.Box.BoxChild)(w1[this.alignment1]));
            w27.Position = 0;
            w27.Expand = false;
            w27.Fill = false;
            // Internal child MonoBPMonitor.frmBackupRestore.ActionArea
            Gtk.HButtonBox w28 = this.ActionArea;
            w28.Name = "dialog1_ActionArea";
            w28.Spacing = 6;
            w28.BorderWidth = ((uint)(5));
            w28.LayoutStyle = ((Gtk.ButtonBoxStyle)(1));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.btnClose = new Gtk.Button();
            this.btnClose.CanDefault = true;
            this.btnClose.CanFocus = true;
            this.btnClose.Name = "btnClose";
            this.btnClose.UseStock = true;
            this.btnClose.UseUnderline = true;
            this.btnClose.Label = "gtk-close";
            this.AddActionWidget(this.btnClose, -7);
            Gtk.ButtonBox.ButtonBoxChild w29 = ((Gtk.ButtonBox.ButtonBoxChild)(w28[this.btnClose]));
            w29.Expand = false;
            w29.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 550;
            this.DefaultHeight = 265;
            this.hseparator4.Hide();
            this.Show();
            this.cbxOptions.Toggled += new System.EventHandler(this.OnBackupCheck_Clicked);
            this.cbxLogs.Toggled += new System.EventHandler(this.OnBackupCheck_Clicked);
            this.cbxDatabaseSchema.Toggled += new System.EventHandler(this.OnBackupCheck_Clicked);
            this.cbxDatabaseData.Toggled += new System.EventHandler(this.OnBackupCheck_Clicked);
            this.cbxAll.Toggled += new System.EventHandler(this.OnCbxAllToggled);
            this.btnBackup.Clicked += new System.EventHandler(this.OnBtnBackupClicked);
            this.btnRestore.Clicked += new System.EventHandler(this.OnBtnRestoreClicked);
            this.btnClose.Clicked += new System.EventHandler(this.OnBtnCloseClicked);
        }
    }
}
