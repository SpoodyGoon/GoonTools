//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3607
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Gtk;

namespace CMYControls
{

	[System.ComponentModel.ToolboxItem(true)]
	public class QuickDate2 : Gtk.DrawingArea
	{
		private int _MinWidth;
		private int _MinHeight;
		private Gdk.Rectangle _Area = new Gdk.Rectangle(0,0, 125, 20);
		private Pango.Layout _BaseMessage;
		public QuickDate2 ()
		{
			_BaseMessage = GetLayout ("Select Date");
		}

		private Pango.Layout GetLayout (string text)
		{
			Pango.Layout layout = new Pango.Layout (this.PangoContext);
			layout.FontDescription = Pango.FontDescription.FromString ("Arial 8");
			layout.SetMarkup ("<span color=\"#000000\"><b>" + text + "</b></span>");
			return layout;
		}


		[GLib.ConnectBefore()]
		protected override bool OnExposeEvent (Gdk.EventExpose args)
		{
			Gdk.Window win = args.Window;
			Gdk.Rectangle area = args.Area;
			this.HeightRequest = _Area.Height;
			this.WidthRequest = _Area.Width;
			
			win.DrawRectangle (Style.BlackGC, true, _Area);
			win.DrawRectangle (Style.BaseGC(StateType.Prelight), true, new Gdk.Rectangle(_Area.X + 2, _Area.Y + 2, _Area.Width - 4, _Area.Height - 4));
			int TextWidth = 0;
			int TextHeight = 0;
			_BaseMessage.GetPixelSize(out TextWidth, out TextHeight);
			win.DrawLayout (Style.BlackGC, Convert.ToInt32((_Area.Width/2) - (TextWidth/2)), Convert.ToInt32((_Area.Height/2) -  (TextHeight/2)), _BaseMessage);
			return true;
		}
	}
}
